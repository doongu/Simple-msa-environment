name: Java CI with Gradle


on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: cicd-test-cd
  CODE_DEPLOY_APPLICATION_NAME: cicd-test-CD
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cicd-test-CD-group

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      run : ./gradlew clean build --exclude-task test
      shell : bash

       
    #  # Jar 파일 Copy
    # - name: Copy Jar
    #   run: cp ./build/libs/*.jar ./deploy/


    - name: Make zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash
    
    # - name: Copy script
    #   run: cp ./scripts/*.sh ./deploy
      
      # AWS 세팅
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # S3 Bucket으로 copy
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
          
      # script files 복사
    # - name: Copy script
    #   run: cp ./scripts/*.sh ./deploy
      
      # S3에 업로드
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

    # # (5) 빌드 결과물을 S3 버킷에 업로드
    # - name: Upload to AWS S3
    #   run: |
    #     aws deploy push \
    #       --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
    #       --ignore-hidden-files \
    #       --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
    #       --source .

    # # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    # - name: Deploy to AWS EC2 from S3
    #   run: |
    #     aws deploy create-deployment \
    #       --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
    #       --deployment-config-name CodeDeployDefault.AllAtOnce \
    #       --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
    #       --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
